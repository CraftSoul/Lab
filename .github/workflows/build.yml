name: Build Kivy Android APK

on:
  push:
    branches: [ main ]

jobs:
  build-android:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
            git zip unzip openjdk-8-jdk \
            python3-pip autoconf automake libtool \
            pkg-config zlib1g-dev libncurses5-dev \
            libncursesw5-dev cmake libffi-dev libssl-dev
        sudo apt install libltdl-dev

    - name: Install Buildozer and dependencies
      run: |
        python -m pip install --upgrade pip
        pip install buildozer cython==0.29.33 kivy==2.2.1 plyer

    - name: Fix jnius compatibility issue and set language_level
      run: |
        find . -name "jnius_utils.pxi" -exec sed -i 's/isinstance(arg, long)/isinstance(arg, int)/g' {} \; 2>/dev/null || true
        find . -name "*.pyx" -exec sed -i 's/isinstance(\(.*\), long)/isinstance(\1, int)/g' {} \; 2>/dev/null || true
        find . -name "*.pyx" -exec sh -c 'if ! grep -q "language_level" "{}"; then sed -i "1i # cython: language_level=3" "{}"; fi' \; 2>/dev/null || true

    - name: Configure Buildozer and Android SDK
      run: |
        if [ ! -f buildozer.spec ]; then
          buildozer init
        fi
        if ! grep -q "android.accept_sdk_license" buildozer.spec; then
          echo "android.accept_sdk_license = True" >> buildozer.spec
        fi
        if ! grep -q "android.sdk" buildozer.spec; then
          echo "android.sdk = 34" >> buildozer.spec
        fi
        if ! grep -q "android.ndk" buildozer.spec; then
          echo "android.ndk = 25b" >> buildozer.spec
        fi
        if ! grep -q "android.api" buildozer.spec; then
          echo "android.api = 33" >> buildozer.spec
        fi
        if ! grep -q "android.minapi" buildozer.spec; then
          echo "android.minapi = 21" >> buildozer.spec
        fi
        if ! grep -q "android.gradle_download" buildozer.spec; then
          echo "android.gradle_download = https://services.gradle.org/distributions/gradle-7.5-all.zip" >> buildozer.spec
        fi

    - name: Build APK with retry and debug info
      run: |
        export PATH="$HOME/.local/bin:$PATH"
        export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64
        export CFLAGS="-DCYTHON_LANGUAGE_LEVEL=3"
        export ANDROID_SDK_HOME="$HOME/.buildozer/android/platform/android-sdk"
        export ANDROID_NDK_HOME="$HOME/.buildozer/android/platform/android-ndk-r25b"
        rm -rf .buildozer
        rm -rf ~/.buildozer
        pip install --user python-for-android==2023.9.16
        echo "第一次构建尝试..."
        timeout 600 buildozer -v android debug || true
        chmod +x .buildozer/android/platform/*/gradlew 2>/dev/null || true
        find .buildozer -name "gradlew" -exec chmod +x {} \; 2>/dev/null || true
        echo "第二次构建尝试..."
        buildozer -v android debug
        
      env:
        JAVA_HOME: /usr/lib/jvm/java-8-openjdk-amd64
        CYTHON_LANGUAGE_LEVEL: "3"
        ANDROID_SDK_HOME: "/home/runner/.buildozer/android/platform/android-sdk"
        ANDROID_NDK_HOME: "/home/runner/.buildozer/android/platform/android-ndk-r25b"
        P4A_RELEASE_KEYSTORE: ${{ secrets.P4A_RELEASE_KEYSTORE }}
        P4A_RELEASE_KEYSTORE_PASSWD: ${{ secrets.P4A_RELEASE_KEYSTORE_PASSWD }}
        P4A_RELEASE_KEYALIAS_PASSWD: ${{ secrets.P4A_RELEASE_KEYALIAS_PASSWD }}
        P4A_RELEASE_KEYALIAS: ${{ secrets.P4A_RELEASE_KEYALIAS }}
      timeout-minutes: 50

    - name: Upload APK
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: kivy-app
        path: bin/*.apk
        retention-days: 7

    - name: Upload build logs on failure
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: build-logs
        path: |
          .buildozer/**/*.log
          .buildozer/**/build.log
        retention-days: 7
