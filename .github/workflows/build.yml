name: Build Kivy Android APK

on:
  push:
    branches: [ main ]

jobs:
  build-android:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Great Purge
      run: |
        find . -name "configure.ac" -delete
        find . -name "acinclude.m4" -delete
        find . -name "Makefile.am" -delete
        find . -name "configure" -delete
        find . -name "config.h.in" -delete
        find . -name "ltmain.sh" -delete
        find . -name "libtool.m4" -delete
        find . -name "*.m4" -delete
        rm -rf m4/ autom4te.cache/ aclocal.m4 install-sh missing depcomp compile
        rm -rf .deps/ .libs/
        ls -la

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
            git zip unzip openjdk-8-jdk \
            python3-pip autoconf automake libtool \
            pkg-config zlib1g-dev libncurses5-dev \
            libncursesw5-dev cmake libffi-dev libssl-dev

    - name: Install Buildozer
      run: |
        python -m pip install --upgrade pip
        pip install buildozer cython kivy==2.2.1 plyer

    - name: p4a check
      run: |
        pip install python-for-android
        p4a --version

    - name: Ensure build directories exist
      run: |
        mkdir -p .buildozer/android/platform

    - name: Build APK
      run: |
        export PATH="$HOME/.local/bin:$PATH"
        export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64
        if ! grep -q "android.accept_sdk_license" buildozer.spec; then
          echo "android.accept_sdk_license = True" >> buildozer.spec
        fi
        rm -rf .buildozer
        buildozer -v android debug
      env:
        JAVA_HOME: /usr/lib/jvm/java-8-openjdk-amd64
      timeout-minutes: 30

    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: kivy-app
        path: bin/*.apk
        retention-days: 7
