name: Build Kivy Android APK

on:
  push:
    branches: [ main ]

jobs:
  build-android:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
            git zip unzip openjdk-8-jdk \
            python3-pip autoconf automake libtool \
            pkg-config zlib1g-dev libncurses5-dev \
            libncursesw5-dev cmake libffi-dev libssl-dev
        sudo apt install libltdl-dev

    - name: Install Buildozer and dependencies
      run: |
        python -m pip install --upgrade pip
        pip install buildozer cython==0.29.33 kivy==2.2.1 plyer kivymd

    - name: Fix jnius compatibility issue and set language_level
      run: |
        find . -name "jnius_utils.pxi" -exec sed -i 's/isinstance(arg, long)/isinstance(arg, int)/g' {} \; 2>/dev/null || true
        find . -name "*.pyx" -exec sed -i 's/isinstance(\(.*\), long)/isinstance(\1, int)/g' {} \; 2>/dev/null || true
        find . -name "*.pyx" -exec sh -c 'if ! grep -q "language_level" "{}"; then sed -i "1i # cython: language_level=3" "{}"; fi' \; 2>/dev/null || true

    - name: Optimize buildozer.spec requirements
      run: |
        if [ -f buildozer.spec ]; then
          cp buildozer.spec buildozer.spec.backup
          sed -i 's/requirements = .*/requirements = kivy==2.2.1,plyer,kivymd,cython/' buildozer.spec
          sed -i 's|,https://github.com/kivymd/KivyMD/archive/master.zip||g' buildozer.spec
        fi

    - name: Pre-download dependencies
      run: |
        pip install --user openssl requests kivymd

    - name: Build APK with optimized configuration
      run: |
        export PATH="$HOME/.local/bin:$PATH"
        export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64
        export CFLAGS="-DCYTHON_LANGUAGE_LEVEL=3"
        rm -rf .buildozer
        rm -rf ~/.buildozer
        pip install --user python-for-android==2023.9.16
        export BUILD_OZER_CACHE_DIR="$HOME/.buildozer_cache"
        mkdir -p "$BUILD_OZER_CACHE_DIR"
        
        echo "=== 开始构建 APK ==="
        echo "Requirements: $(grep 'requirements' buildozer.spec)"
        buildozer -v android debug 2>&1 | tee build.log
        
      env:
        JAVA_HOME: /usr/lib/jvm/java-8-openjdk-amd64
        CYTHON_LANGUAGE_LEVEL: "3"
        P4A_RELEASE_KEYSTORE: ${{ secrets.P4A_RELEASE_KEYSTORE }}
        P4A_RELEASE_KEYSTORE_PASSWD: ${{ secrets.P4A_RELEASE_KEYSTORE_PASSWD }}
        P4A_RELEASE_KEYALIAS_PASSWD: ${{ secrets.P4A_RELEASE_KEYALIAS_PASSWD }}
        P4A_RELEASE_KEYALIAS: ${{ secrets.P4A_RELEASE_KEYALIAS }}
      timeout-minutes: 60

    - name: Check and fix gradlew permissions
      if: failure()
      run: |
        find .buildozer -name "gradlew" -exec chmod +x {} \; 2>/dev/null || true
        echo "Gradlew权限修复完成"

    - name: Retry build if failed
      if: failure()
      run: |
        export PATH="$HOME/.local/bin:$PATH"
        export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64
        echo "=== 重试构建 ==="
        buildozer -v android debug
      env:
        JAVA_HOME: /usr/lib/jvm/java-8-openjdk-amd64
        P4A_RELEASE_KEYSTORE: ${{ secrets.P4A_RELEASE_KEYSTORE }}
        P4A_RELEASE_KEYSTORE_PASSWD: ${{ secrets.P4A_RELEASE_KEYSTORE_PASSWD }}
        P4A_RELEASE_KEYALIAS_PASSWD: ${{ secrets.P4A_RELEASE_KEYALIAS_PASSWD }}
        P4A_RELEASE_KEYALIAS: ${{ secrets.P4A_RELEASE_KEYALIAS }}
      timeout-minutes: 30

    - name: Upload APK
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: kivy-app
        path: bin/*.apk
        retention-days: 7

    - name: Upload build logs on failure
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: build-logs
        path: |
          build.log
          .buildozer/**/*.log
        retention-days: 7
